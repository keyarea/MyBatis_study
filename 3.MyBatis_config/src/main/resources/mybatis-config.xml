<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
    <!-- 1、和Spring的Context：property-placeholder：引用外部配置文件的 -->
    <!--
        resource: 从类路径下引用
        url: 引用磁盘或者网络路径的资源
     -->
    <properties resource="dbconfig.properties" ></properties>
    
    <!-- settings：这是 MyBatis 中极为重要的调整设置，它们会改变 MyBatis 的运行时行为。 下表描述了设置中各项的意图、默认值等。 -->
    <settings>
        <!-- name: 配置项的key；value：配置项的值； -->
        <!-- loginAccount  login_account -->
        <setting name="mapUnderscoreToCamelCase" value="true"/>
    </settings>

    <!-- 类型别名;为常用的类型（javaBean）起别名-->
    <typeAliases>
        <!-- typeAlias: 就是为一个javabean起别名；默认就是类名（不区分大小写）；在配置文件就可以都写类名了 -->
        <!-- alias="" ： 指定一个别名 -->
<!--        <typeAlias type="net.qipo.bean.Employee"/>-->

<!--        批量起别名;name: 指定包的名字；默认的别名就是类名    -->
        <package name="net.qipo.bean"/>
        <!-- 尽量直接使用全类名-->
    </typeAliases>


    <!-- 类型处理器作用： -->
<!--    <typeHandlers>-->
<!--        &lt;!&ndash;    自定义的处理器配置上就好了      &ndash;&gt;-->
<!--        <typeHandler handler=""/>-->
<!--    </typeHandlers>-->

    <!-- 插件是mybatis 中一个非常强大的 -->

    <!--  environments: 配置环境
          environment： 配置一个具体的环境。都需要一个事务管理器以及一个数据源；
          后来的数据源和事务都是Spring来做；
      -->
    <!--  default：默认使用哪个环境  -->
    <environments default="development">

        <!--  当前环境的唯一标识      -->
        <environment id="development">
            <transactionManager type="JDBC"/>
            <dataSource type="POOLED">
                <!-- ${}取出配置文件中的值 -->
                <property name="driver" value="${driverclass}"/>
                <property name="url" value="${jdbcurl}"/>
                <property name="username" value="${username}"/>
                <property name="password" value="${password}"/>
            </dataSource>
        </environment>
    </environments>

    <!-- 用来考虑数据库移植性的 -->
    <databaseIdProvider type="DB_VENDOR">
        <!-- name: 数据库的厂商标识；给这个标识起一个别名 -->
        <property name="MySQL" value="mysql"/>
        <property name="Oracle" value="oracle"/>
    </databaseIdProvider>

    <!-- 写好的sql映射文件需要使用mappers注册进来 -->
    <mappers>
        <mapper resource="mybatis/EmployeeDao.xml" />
        <!--
            class: 直接引用接口的全类名
                可以将xml文件放在和dao接口同目录下，而且文件名和接口名一致
                class的另一种用法：直接在dao上注解方法,就需要直接class引用全类名
            resource: 在类路径下找sql映射文件
            url: 可以从磁盘或者网络路径引用

            配合使用：重要的dao可以写配置；
            简单的就直接标注注解；
         -->

        <!-- 批量注册 name:dao所在的包名-->
        <!-- 一般使用批量导入 -->
<!--        <package name="net.qipo.dao"/>-->
    </mappers>
</configuration>